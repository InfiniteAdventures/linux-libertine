# convert the Libertine-Font to ttf font
#
# $1 sfd-file
# $2 ttf-file
#
# $Id$
#
# Michael Niedermair m.g.n@gmx.de
#
Open($1,1)
#
Print( "fontname   : " , $fontname )
Print( "familyname : " , $familyname )
Print( "fullname   : " , $fullname )
Print( "weight     : " , $weight )
#
#
# change the fontname
# SetFontNames(fontname[,family[,fullname[,weight[,copyright-notice[,fontversion]]]]]) 
if ( $fontname == "LinBiolinumO" )
   SetFontNames("LinBiolinum", "Linux Biolinum", "Linux Biolinum")   
endif
if ( $fontname == "LinBiolinumOB" )
   SetFontNames("LinBiolinumB", "Linux Biolinum", "Linux Biolinum Bold")   
endif
if ( $fontname == "LinLibertineO" )
   SetFontNames("LinLibertine", "Linux Libertine", "Linux Libertine")   
endif
if ( $fontname == "LinLibertineOB" )
   SetFontNames("LinLibertineB", "Linux Libertine", "Linux Libertine Bold")   
endif
if ( $fontname == "LinLibertineOI" )
   SetFontNames("LinLibertineI", "Linux Libertine", "Linux Libertine Italic")   
endif
if ( $fontname == "LinLibertineOBI" )
   SetFontNames("LinLibertineBI", "Linux Libertine", "Linux Libertine Bold Italic")   
endif
if ( $fontname == "LinLibertineOC" )
   SetFontNames("LinLibertineC", "Linux Libertine C", "Linux Libertine Capitals")   
endif
#
# Sets the font's order. 
# Order must be either 2 (quadratic) or 3 (cubic). 
# Umwandeln nach Quadratischen Splines
SetFontOrder(2)
#
# Alle Zeichen markieren
SelectAll()
#
# Zeichenreferenzen auflösen
UnlinkReference()
#
# Überlagerungen entfernen
RemoveOverlap()
#
# Auf Integer runden mit einer Nachkommastelle
# (factor * x) / factor
# 10 -> eine Nachkommstelle
# 100 -> zwei Nachkommastellen
RoundToInt(10)
#
# Hintergrund löschen
# Clears the background of all selected glyphs
ClearBackground()
#
#    Runterskalieren und anschließend Runden  
ScaleToEm(2048)
RoundToInt()
#
# Hinting: Auto Instruct
# Generates (TrueType) instructions for selected glyphs. 
AutoInstr()
#
# Generate(filename[,bitmaptype[,fmflags[,res[,mult-sfd-file[,namelist-name]]]]]) 
Generate($2)
#
Close()
Quit()
